$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 & clk $end
  $var wire 1 ' rst_n $end
  $var wire 32 ( data_in [31:0] $end
  $var wire 8 ) select [7:0] $end
  $var wire 32 * data_out [31:0] $end
  $scope module crossbar_switch $end
   $var wire 32 + NUM_INPUTS [31:0] $end
   $var wire 32 + NUM_OUTPUTS [31:0] $end
   $var wire 32 , DATA_WIDTH [31:0] $end
   $var wire 1 & clk $end
   $var wire 1 ' rst_n $end
   $var wire 32 ( data_in [31:0] $end
   $var wire 8 ) select [7:0] $end
   $var wire 32 * data_out [31:0] $end
   $var wire 32 # i [31:0] $end
   $var wire 2 $ sel_idx [1:0] $end
   $var wire 8 % selected_data [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00 $
b00000000 %
0&
0'
b00000000000000000000000000000000 (
b00000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000100 +
b00000000000000000000000000001000 ,
#1
b00000000000000000000000000000100 #
1&
#2
0&
1'
#3
b11010100110000111011001010100001 (
b11100100 )
#4
b11 $
b11010100 %
1&
b11010100110000111011001010100001 *
#5
0&
b00011011 )
#6
b00 $
b10100001 %
1&
b10100001101100101100001111010100 *
#7
0&
b00000000 )
#8
1&
b10100001101000011010000110100001 *
#9
0&
b01010101 )
#10
b01 $
b10110010 %
1&
b10110010101100101011001010110010 *
#11
0&
b10101010 )
#12
b10 $
b11000011 %
1&
b11000011110000111100001111000011 *
#13
0&
b11111111 )
#14
b11 $
b11010100 %
1&
b11010100110101001101010011010100 *
#15
0&
b01000100 )
#16
b01 $
b10110010 %
1&
b10110010101000011011001010100001 *
#17
0&
b01000100001100110010001000010001 (
b00000000 )
#18
b00 $
b00010001 %
1&
b00010001000100010001000100010001 *
#19
0&
b01010101 )
#20
b01 $
b00100010 %
1&
b00100010001000100010001000100010 *
#21
0&
b10101010 )
#22
b10 $
b00110011 %
1&
b00110011001100110011001100110011 *
#23
0&
b11111111 )
#24
b11 $
b01000100 %
1&
b01000100010001000100010001000100 *
#25
0&
b00011011 )
#26
b00 $
b00010001 %
1&
b00010001001000100011001101000100 *
