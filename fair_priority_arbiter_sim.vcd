$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 - clk $end
  $var wire 1 . rst_n $end
  $var wire 4 / request [3:0] $end
  $var wire 8 0 priorities [7:0] $end
  $var wire 4 1 grant [3:0] $end
  $var wire 2 2 grant_idx [1:0] $end
  $var wire 1 3 valid $end
  $scope module fair_priority_arbiter $end
   $var wire 32 4 NUM_REQUESTERS [31:0] $end
   $var wire 32 5 PRIORITY_WIDTH [31:0] $end
   $var wire 1 - clk $end
   $var wire 1 . rst_n $end
   $var wire 4 / request [3:0] $end
   $var wire 8 0 priorities [7:0] $end
   $var wire 4 1 grant [3:0] $end
   $var wire 2 2 grant_idx [1:0] $end
   $var wire 1 3 valid $end
   $var wire 2 ' last_grant_idx [1:0] $end
   $var wire 2 # priority_values[0] [1:0] $end
   $var wire 2 $ priority_values[1] [1:0] $end
   $var wire 2 % priority_values[2] [1:0] $end
   $var wire 2 & priority_values[3] [1:0] $end
   $scope module unnamedblk2 $end
    $var wire 2 ( highest_priority [1:0] $end
    $var wire 2 ) highest_idx [1:0] $end
    $var wire 1 * found $end
    $var wire 2 + current_idx [1:0] $end
    $scope module unnamedblk3 $end
     $var wire 32 , loop_j [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00 #
b00 $
b00 %
b00 &
b00 '
b00 (
b00 )
0*
b00 +
b00000000000000000000000000000000 ,
0-
0.
b0000 /
b00000000 0
b0000 1
b00 2
03
b00000000000000000000000000000100 4
b00000000000000000000000000000010 5
#1
1-
#2
b01 #
b01 %
0-
1.
b0001 /
b00010001 0
#3
b01 (
1*
b01 +
b00000000000000000000000000000100 ,
1-
b0001 1
13
#4
0-
#5
1-
#6
0-
#7
1-
#8
b00 #
b01 $
b00 %
b11 &
0-
b1111 /
b11000100 0
#9
b11 '
b11 (
b11 )
1-
b1000 1
b11 2
#10
0-
#11
b00 +
1-
#12
0-
#13
1-
#14
b01 #
b00 $
b01 %
b00 &
0-
b0110 /
b00010001 0
#15
b10 '
b01 (
b10 )
1-
b0100 1
b10 2
#16
0-
#17
b11 +
1-
#18
0-
#19
1-
#20
b00 '
0-
0.
b0000 1
b00 2
03
#21
1-
#22
b01 $
b01 &
0-
1.
b1111 /
b01010101 0
#23
b01 '
b01 )
b01 +
1-
b0010 1
b01 2
13
#24
0-
#25
b10 '
b10 )
b10 +
1-
b0100 1
b10 2
#26
0-
#27
b11 '
b11 )
b11 +
1-
b1000 1
b11 2
#28
0-
#29
b00 '
b00 )
b00 +
1-
b0001 1
b00 2
#30
0-
#31
b01 '
b01 )
b01 +
1-
b0010 1
b01 2
#32
0-
#33
b10 '
b10 )
b10 +
1-
b0100 1
b10 2
#34
0-
#35
b11 '
b11 )
b11 +
1-
b1000 1
b11 2
#36
0-
#37
b00 '
b00 )
b00 +
1-
b0001 1
b00 2
