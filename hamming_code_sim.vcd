$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 4 # data_in [3:0] $end
  $var wire 7 $ encoded_out [6:0] $end
  $var wire 7 % received_in [6:0] $end
  $var wire 4 & data_out [3:0] $end
  $var wire 1 ' single_bit_error $end
  $var wire 7 ( corrected_code [6:0] $end
  $scope module hamming_code $end
   $var wire 32 1 DATA_WIDTH [31:0] $end
   $var wire 4 # data_in [3:0] $end
   $var wire 7 $ encoded_out [6:0] $end
   $var wire 7 % received_in [6:0] $end
   $var wire 4 & data_out [3:0] $end
   $var wire 1 ' single_bit_error $end
   $var wire 7 ( corrected_code [6:0] $end
   $var wire 1 ) p1 $end
   $var wire 1 * p2 $end
   $var wire 1 + p3 $end
   $var wire 1 , s1 $end
   $var wire 1 - s2 $end
   $var wire 1 . s3 $end
   $var wire 3 / syndrome [2:0] $end
   $var wire 7 0 error_position [6:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000 #
b0000000 $
b0000000 %
b0000 &
0'
b0000000 (
0)
0*
0+
0,
0-
0.
b000 /
b0000000 0
b00000000000000000000000000000100 1
#1
b0001 #
b0000111 $
1)
1*
#2
b0010 #
b0011001 $
0*
1+
#3
b0011 #
b0011110 $
0)
1*
#4
b0100 #
b0101010 $
#5
b0101 #
b0101101 $
1)
0*
#6
b0110 #
b0110011 $
1*
0+
#7
b0111 #
b0110100 $
0)
0*
#8
b1000 #
b1001011 $
1)
1*
1+
#9
b1001 #
b1001100 $
0)
0*
#10
b1010 #
b1010010 $
1*
0+
#11
b1011 #
b1010101 $
1)
0*
#12
b1100 #
b1100001 $
#13
b1101 #
b1100110 $
0)
1*
#14
b1110 #
b1111000 $
0*
1+
#15
b1111 #
b1111111 $
1)
1*
#16
b0010 #
b0011001 $
0*
#17
b1011001 %
b0010 &
1'
b0011001 (
1,
1-
1.
b111 /
b1000000 0
#18
b0011 #
b0011110 $
0)
1*
#19
b0011111 %
b0011 &
b0011110 (
0-
0.
b001 /
b0000001 0
#20
b1110 #
b1111000 $
0*
#21
b1111001 %
b1110 &
b1111000 (
#22
b1010 #
b1010010 $
1*
0+
#23
b1000010 %
b1010 &
b1010010 (
1.
b101 /
b0010000 0
#24
b0101 #
b0101101 $
1)
0*
1+
#25
b0101111 %
b0101 &
b0101101 (
0,
1-
0.
b010 /
b0000010 0
#26
b1000 #
b1001011 $
1*
#27
b1001001 %
b1000 &
b1001011 (
#28
b1101 #
b1100110 $
0)
0+
#29
b1100111 %
b1101 &
b1100110 (
1,
0-
b001 /
b0000001 0
#30
b1111 #
b1111111 $
1)
1+
#31
b1011111 %
b1111 &
b1111111 (
0,
1-
1.
b110 /
b0100000 0
#32
b0001 #
b0000111 $
0+
#33
b0010111 %
b0001 &
b0000111 (
1,
0-
b101 /
b0010000 0
#34
b0000 #
b0000000 $
0)
0*
#35
b0001000 %
b0000 &
b0000000 (
0,
b100 /
b0001000 0
#36
b0101 #
b0101101 $
1)
1+
#37
b0101101 %
b0101 &
0'
b0101101 (
0.
b000 /
b0000000 0
#38
b0110 #
b0110011 $
1*
0+
#39
b0110011 %
b0110 &
b0110011 (
#40
b0000 #
b0000000 $
0)
0*
#41
b0000000 %
b0000 &
b0000000 (
#42
b1100 #
b1100001 $
1)
#43
b1100001 %
b1100 &
b1100001 (
#44
b1000 #
b1001011 $
1*
1+
#45
b1001011 %
b1000 &
b1001011 (
