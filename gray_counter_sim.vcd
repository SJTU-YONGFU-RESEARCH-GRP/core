$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 # clk $end
  $var wire 1 $ rst_n $end
  $var wire 1 % enable $end
  $var wire 1 & direction $end
  $var wire 1 ' load $end
  $var wire 4 ( data_in [3:0] $end
  $var wire 4 ) gray_out [3:0] $end
  $var wire 4 * binary_out [3:0] $end
  $scope module gray_counter $end
   $var wire 32 - WIDTH [31:0] $end
   $var wire 1 # clk $end
   $var wire 1 $ rst_n $end
   $var wire 1 % enable $end
   $var wire 1 & direction $end
   $var wire 1 ' load $end
   $var wire 4 ( data_in [3:0] $end
   $var wire 4 ) gray_out [3:0] $end
   $var wire 4 * binary_out [3:0] $end
   $var wire 4 + binary_count [3:0] $end
   $var wire 4 , next_binary [3:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
b0000 (
b0000 )
b0000 *
b0000 +
b0001 ,
b00000000000000000000000000000100 -
#1
1#
#2
0#
1$
1%
#3
1#
b0001 )
b0001 *
b0001 +
b0010 ,
#4
0#
#5
1#
b0011 )
b0010 *
b0010 +
b0011 ,
#6
0#
#7
1#
b0010 )
b0011 *
b0011 +
b0100 ,
#8
0#
#9
1#
b0110 )
b0100 *
b0100 +
b0101 ,
#10
0#
#11
1#
b0111 )
b0101 *
b0101 +
b0110 ,
#12
0#
#13
1#
b0101 )
b0110 *
b0110 +
b0111 ,
#14
0#
#15
1#
b0100 )
b0111 *
b0111 +
b1000 ,
#16
0#
#17
1#
b1100 )
b1000 *
b1000 +
b1001 ,
#18
0#
0%
1'
b1010 (
#19
1#
b1111 )
b1010 *
b1010 +
b1011 ,
#20
0#
1%
1&
0'
b1001 ,
#21
1#
b1101 )
b1001 *
b1001 +
b1000 ,
#22
0#
#23
1#
b1100 )
b1000 *
b1000 +
b0111 ,
#24
0#
#25
1#
b0100 )
b0111 *
b0111 +
b0110 ,
#26
0#
#27
1#
b0101 )
b0110 *
b0110 +
b0101 ,
#28
0#
#29
1#
b0111 )
b0101 *
b0101 +
b0100 ,
#30
0#
#31
1#
b0110 )
b0100 *
b0100 +
b0011 ,
#32
0#
#33
1#
b0010 )
b0011 *
b0011 +
b0010 ,
#34
0#
#35
1#
b0011 )
b0010 *
b0010 +
b0001 ,
