$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 ( clk $end
  $var wire 1 ) rst_n $end
  $var wire 1 * serial_in $end
  $var wire 1 + enable $end
  $var wire 8 , parallel_out [7:0] $end
  $var wire 1 - parity_out $end
  $scope module sipo_register $end
   $var wire 32 . WIDTH [31:0] $end
   $var wire 32 / PARITY_ENABLE [31:0] $end
   $var wire 32 0 PARITY_TYPE [31:0] $end
   $var wire 1 ( clk $end
   $var wire 1 ) rst_n $end
   $var wire 1 * serial_in $end
   $var wire 1 + enable $end
   $var wire 8 , parallel_out [7:0] $end
   $var wire 1 - parity_out $end
   $var wire 8 # shift_reg [7:0] $end
   $var wire 1 $ parity_bit $end
   $var wire 32 % count_ones__Vstatic__i [31:0] $end
   $var wire 32 & count_ones__Vstatic__count [31:0] $end
   $scope module unnamedblk1 $end
    $var wire 8 ' next_shift_reg [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000 '
0(
0)
0*
0+
b00000000 ,
0-
b00000000000000000000000000001000 .
b00000000000000000000000000000001 /
b00000000000000000000000000000000 0
#1
1(
#2
0(
1)
1*
1+
#3
b00000001 #
1$
b00000000000000000000000000001000 %
b00000000000000000000000000000001 &
b00000001 '
1(
b00000001 ,
1-
#4
0(
0*
#5
b00000010 #
b00000010 '
1(
b00000010 ,
#6
0(
1*
#7
b00000101 #
0$
b00000000000000000000000000000010 &
b00000101 '
1(
b00000101 ,
0-
#8
0(
0*
#9
b00001010 #
b00001010 '
1(
b00001010 ,
#10
0(
1*
#11
b00010101 #
1$
b00000000000000000000000000000011 &
b00010101 '
1(
b00010101 ,
1-
#12
0(
0*
#13
b00101010 #
b00101010 '
1(
b00101010 ,
#14
0(
1*
#15
b01010101 #
0$
b00000000000000000000000000000100 &
b01010101 '
1(
b01010101 ,
0-
#16
0(
0*
#17
b10101010 #
b10101010 '
1(
b10101010 ,
#18
b00000000 #
0(
0)
0+
b00000000 ,
#19
1(
#20
0(
1)
1*
1+
#21
b00000001 #
1$
b00000000000000000000000000000001 &
b00000001 '
1(
b00000001 ,
1-
#22
0(
#23
b00000011 #
0$
b00000000000000000000000000000010 &
b00000011 '
1(
b00000011 ,
0-
#24
0(
#25
b00000111 #
1$
b00000000000000000000000000000011 &
b00000111 '
1(
b00000111 ,
1-
#26
0(
#27
b00001111 #
0$
b00000000000000000000000000000100 &
b00001111 '
1(
b00001111 ,
0-
#28
0(
0*
#29
b00011110 #
b00011110 '
1(
b00011110 ,
#30
0(
#31
b00111100 #
b00111100 '
1(
b00111100 ,
#32
0(
#33
b01111000 #
b01111000 '
1(
b01111000 ,
#34
0(
#35
b11110000 #
b11110000 '
1(
b11110000 ,
#36
b00000000 #
0(
0)
0+
b00000000 ,
#37
1(
#38
0(
1)
1*
1+
#39
b00000001 #
1$
b00000000000000000000000000000001 &
b00000001 '
1(
b00000001 ,
1-
#40
0(
#41
b00000011 #
0$
b00000000000000000000000000000010 &
b00000011 '
1(
b00000011 ,
0-
#42
0(
#43
b00000111 #
1$
b00000000000000000000000000000011 &
b00000111 '
1(
b00000111 ,
1-
#44
0(
#45
b00001111 #
0$
b00000000000000000000000000000100 &
b00001111 '
1(
b00001111 ,
0-
#46
0(
#47
b00011111 #
1$
b00000000000000000000000000000101 &
b00011111 '
1(
b00011111 ,
1-
#48
0(
#49
b00111111 #
0$
b00000000000000000000000000000110 &
b00111111 '
1(
b00111111 ,
0-
#50
0(
#51
b01111111 #
1$
b00000000000000000000000000000111 &
b01111111 '
1(
b01111111 ,
1-
#52
0(
#53
b11111111 #
0$
b00000000000000000000000000001000 &
b11111111 '
1(
b11111111 ,
0-
#54
b00000000 #
0(
0)
0*
0+
b00000000 ,
#55
1(
#56
0(
1)
1+
#57
b00000000000000000000000000000000 &
b00000000 '
1(
#58
0(
1*
#59
b00000001 #
1$
b00000000000000000000000000000001 &
b00000001 '
1(
b00000001 ,
1-
#60
0(
0*
#61
b00000010 #
b00000010 '
1(
b00000010 ,
#62
0(
1*
#63
b00000101 #
0$
b00000000000000000000000000000010 &
b00000101 '
1(
b00000101 ,
0-
#64
0(
0*
#65
b00001010 #
b00001010 '
1(
b00001010 ,
#66
0(
1*
#67
b00010101 #
1$
b00000000000000000000000000000011 &
b00010101 '
1(
b00010101 ,
1-
#68
0(
0*
#69
b00101010 #
b00101010 '
1(
b00101010 ,
#70
0(
1*
#71
b01010101 #
0$
b00000000000000000000000000000100 &
b01010101 '
1(
b01010101 ,
0-
#72
0(
0*
#73
b10101010 #
b10101010 '
1(
b10101010 ,
#74
0(
1*
#75
b01010101 #
b01010101 '
1(
b01010101 ,
#76
0(
0*
#77
b10101010 #
b10101010 '
1(
b10101010 ,
#78
0(
1*
#79
b01010101 #
b01010101 '
1(
b01010101 ,
